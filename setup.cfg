[flake8]
max-line-length = 100
exclude = 
    .git,
    __pycache__,
    .pytest_cache,
    .mypy_cache,
    venv,
    env,
    logs,
    data,
    docs,
    postgres-init,
    deploy,
    scripts,
    migrations,
    .streamlit
ignore = 
    E203,
    W503,
    E501,
    F401,
    F811,
    E402
per-file-ignores =
    __init__.py:F401
    tests/*:F401,F811,E402
    */conftest.py:F401,F811

[mypy]
python_version = 3.11
warn_return_any = False
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = False
disallow_untyped_decorators = False
no_implicit_optional = False
warn_redundant_casts = False
warn_unused_ignores = False
warn_no_return = False
warn_unreachable = False
strict_equality = False
ignore_missing_imports = True
files = app/
exclude = (logs|data|docs|scripts|postgres-init|deploy|migrations|\.streamlit)/

[tool:pytest]
testpaths = app/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --tb=short --disable-warnings
asyncio_mode = auto
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

[coverage:run]
source = app/
omit = 
    */tests/*
    */venv/*
    */env/*
    */logs/*
    */data/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
fail_under = 0