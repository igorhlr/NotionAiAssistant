version: "3.9"

services:
  db:
    image: postgres:14-alpine
    container_name: notionia_postgres
    env_file:
      - /home/user0/docker-secrets/open-source-secrets/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - /home/user0/docker-data/notion-assistant/postgres-data:/var/lib/postgresql/data
      - /home/user0/docker-data/notion-assistant/backups:/backups
      - ../../config/postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    command: ["postgres", "-c", "listen_addresses=*"]
    networks:
      - shared_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

  app:
    build:
      context: ../../app
      dockerfile: ../deploy/docker/app.dockerfile
    container_name: notionia_app
    env_file:
      - /home/user0/docker-secrets/open-source-secrets/.env
    environment:
      DATABASE_URL: "postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@notionia_postgres:5432/${POSTGRES_DB}"
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NOTION_API_KEY: ${NOTION_API_KEY}
      NOTION_PAGE_ID: ${NOTION_PAGE_ID}
      JWT_EXPIRE_MINUTES: ${JWT_EXPIRE_MINUTES}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DEBUG: "False"
      ENVIRONMENT: "production"
      LOG_LEVEL: ${LOG_LEVEL}
    ports:
      - "8501:8501"  # Streamlit frontend
      - "8085:8080"  # FastAPI backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shared_network
    volumes:
      - ../../logs:/app/logs
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  shared_network:
    external: true